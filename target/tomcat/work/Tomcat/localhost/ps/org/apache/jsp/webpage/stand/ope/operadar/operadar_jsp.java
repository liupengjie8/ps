/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-10-29 10:54:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webpage.stand.ope.operadar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class operadar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fns:getAdminPath", com.jeeplus.common.config.Global.class, "getAdminPath", new Class[] {});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/tlds/menu.tld", Long.valueOf(1565601181978L));
    _jspx_dependants.put("/webpage/include/taglib.jsp", Long.valueOf(1565601231143L));
    _jspx_dependants.put("/WEB-INF/tlds/fns.tld", Long.valueOf(1566895038156L));
    _jspx_dependants.put("/WEB-INF/tlds/shiros.tld", Long.valueOf(1565601182005L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta name=\"decorator\" content=\"ani\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-selection.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-path.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-shape.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-array.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-collection.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-format.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-interpolate.v1.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/plugin/d3/d3-scale.v2.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctxStatic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/common/js/radar/ramda.min.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        #svg{\r\n");
      out.write("            margin: auto;\r\n");
      out.write("        }\r\n");
      out.write("        .legend{\r\n");
      out.write("            padding-left: 2em;\r\n");
      out.write("            line-height: 1.8em;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .legend .color {\r\n");
      out.write("            padding: 0 0.6em;\r\n");
      out.write("            margin: 0 1em 0 .2em;\r\n");
      out.write("            line-height: .8em;\r\n");
      out.write("            background-color: #ccc;\r\n");
      out.write("            outline: solid 1px #ccc;\r\n");
      out.write("        }\r\n");
      out.write("        .legend .color.before {\r\n");
      out.write("            background-color: #1890FF;\r\n");
      out.write("        }\r\n");
      out.write("        .legend .color.operating {\r\n");
      out.write("            background-color: #F7212B;\r\n");
      out.write("        }\r\n");
      out.write("        .legend .color.after {\r\n");
      out.write("            background-color: #53C41A;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"wrapper wrapper-content\"> \r\n");
      out.write("    <!-- 栏目1\t-->\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<div class=\"panel panel-primary\"> \r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- 标题end\t--> \r\n");
      out.write("\t\t\t\t\t<!--表格内容-->\r\n");
      out.write("\t\t\t\t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row m-b20 \">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"bars pull-right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t    <button id=\"btn_select_column\" class=\"btn btn-primary\" onclick=\"selectColumn()\"> <i class=\"glyphicon glyphicon-plus\"></i> 自定义筛选条件 </button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"select_column\" style='display:none;' class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id='cascadebox' style=\"padding:0;\" class=\"col-sm-8\">\r\n");
      out.write("\t                          \r\n");
      out.write("\t                        </div>\r\n");
      out.write("   \t                        <button class=\"btn btn-primary\" onclick=\"cancelSelectColumn()\">收起</button>\r\n");
      out.write("\t                        <button class=\"btn btn-primary\" onclick=\"confirmSelectColumn()\">确认</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("\t\t\t\t\t\t<form id=\"searchForm\" modelAttribute=\"opeColumn\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\" id=\"selectRow1\">\r\n");
      out.write("\t\t\t\t\t\t    <input type='hidden' value='' id='indexIds' name='indexIds'>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-1-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-12 update-align-items \">患者id</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input class=\"form-control \" type=\"text\" value=\"\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname=\"patientId\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-1-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-12 update-align-items \">身份</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select id=\"selectType\" name=\"identity\" class=\"form-control \"><option\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"\">全部</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"城乡居民\">城乡居民</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"城镇职工\">城镇职工</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"军以上干部\">军以上干部</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"免费家属\">免费家属</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"免费职工\">免费职工</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"师以上退休\">师以上退休</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"师职干部\">师职干部</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"士兵\">士兵</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"司局级干部\">司局级干部</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"随军家属\">随军家属</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"团以下干部\">团以下干部</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"团以下退休\">团以下退休</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"一般人员\">一般人员</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"优惠家属\">优惠家属</option></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-xs-1-5\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-12 update-align-items \">费别</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<select id=\"selectType\" name=\"chargeType\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control \"><option value=\"\">全部</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"地方公疗\">地方公疗</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"地方医保\">地方医保</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"军队医改\">军队医改</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"全费\">全费</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"特需服务\">特需服务</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"武警医改\">武警医改</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"异地医保\">异地医保</option></select>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"select_index\" style='display:none;' class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div id='cascadeboxIndex' style=\"padding:0;\" class=\"col-sm-8\">\r\n");
      out.write("\t                          \r\n");
      out.write("\t                        </div>\r\n");
      out.write("\t                        <button class=\"btn btn-primary\" onclick=\"cancelSelectIndex()\">收起</button>\r\n");
      out.write("\t                        <button class=\"btn btn-primary\" onclick=\"confirmSelectIndex()\">确认</button>\r\n");
      out.write("                        </div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"bars pull-right\">\r\n");
      out.write("\t\t\t\t\t\t    <button id=\"search\" class=\"btn btn-primary\" onclick=\"selectIndex()\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-search\"></i> 选择指标\r\n");
      out.write("\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t<button id=\"search\" class=\"btn btn-primary\" onclick=\"search()\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<i class=\"glyphicon glyphicon-search\"></i> 查询\r\n");
      out.write("\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"legend\">\r\n");
      out.write("        图例: \r\n");
      out.write("        术前<span class=\"color before\"></span>\r\n");
      out.write("        术中<span class=\"color operating\"></span>\r\n");
      out.write("        术后<span class=\"color after\"></span>\r\n");
      out.write("    </div>\r\n");
      out.write("    <svg id=\"svg\" width=\"840\" height=\"760\" viewBox=\"0,0,840,760\"></svg>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("    $(function(){\r\n");
      out.write("\t\t$(\".page_title\",parent.document).html(\"手术服务雷达图\");\r\n");
      out.write("\t})\r\n");
      out.write("        // 数据集\r\n");
      out.write("        // 二维数组\r\n");
      out.write("        // before, operating, after\r\n");
      out.write("        $(function(){\r\n");
      out.write("        \tshowRadar();\r\n");
      out.write("        })\r\n");
      out.write("        function goDetail(d){\r\n");
      out.write("        \talert(JSON.stringify(d))\r\n");
      out.write("        }\r\n");
      out.write("        function showRadar(){\r\n");
      out.write("        \t$.ajax({\r\n");
      out.write("    \t\t    type: \"post\",\r\n");
      out.write("    \t\t    url: \"/ps/a/operadar/operadar/getOpeDetailList\",\r\n");
      out.write("    \t\t    data: $(\"#searchForm\").serializeJSON(),\r\n");
      out.write("    \t\t    dataType: \"json\",\r\n");
      out.write("    \t\t    success: function(result){\r\n");
      out.write("    \t\t    \tvar dataset=[];\r\n");
      out.write("    \t\t    \tconsole.log(result.preOpeRadarData);\r\n");
      out.write("    \t\t    \tdataset.push(result.preOpeRadarData);\r\n");
      out.write("    \t\t    \trenderChart('#svg', dataset, {\r\n");
      out.write("    \t\t            // 分级算法, value -> level, 由低到高\r\n");
      out.write("    \t\t            level: function(value) {\r\n");
      out.write("    \t\t                if (value < 0.50) {\r\n");
      out.write("    \t\t                    return 0\r\n");
      out.write("    \t\t                }\r\n");
      out.write("    \t\t                if (value < 0.80) {\r\n");
      out.write("    \t\t                    return 1\r\n");
      out.write("    \t\t                }\r\n");
      out.write("    \t\t                return 2\r\n");
      out.write("    \t\t            },\r\n");
      out.write("    \t\t            // 兴趣点点击事件处理\r\n");
      out.write("    \t\t            clickPoint: function(d, index) {\r\n");
      out.write("    \t\t            \twindow.location.href=\"/ps/a/opedetail/opeDetail/opeDetail?indexId=\"+d.id;\r\n");
      out.write("    \t\t            },\r\n");
      out.write("    \t\t            // 格式化提示信息\r\n");
      out.write("    \t\t            formatTip: function(d, index) {\r\n");
      out.write("    \t\t                const years = ['上一年', '今年']\r\n");
      out.write("    \t\t                return years[index] + '(' + d.title + '):' + d.value*100+'%'\r\n");
      out.write("    \t\t            }\r\n");
      out.write("    \t\t        })\r\n");
      out.write("    \t\t    }\r\n");
      out.write("    \t\t});\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        // 选择器, 数据集, 配置项\r\n");
      out.write("        function renderChart (selector, dataset, config) {\r\n");
      out.write("            config = R.mergeRight({\r\n");
      out.write("                levelColors: [\r\n");
      out.write("                    '#F7212B',\r\n");
      out.write("                    '#1890FF',\r\n");
      out.write("                    '#53C41A'\r\n");
      out.write("                ],\r\n");
      out.write("                // level\r\n");
      out.write("                pieColors: [\r\n");
      out.write("                    '#E5E5E5',\r\n");
      out.write("                    '#BFBFBF',\r\n");
      out.write("                    '#D9D9D9'\r\n");
      out.write("                ],\r\n");
      out.write("                doughnutColors: [\r\n");
      out.write("                    '#1890FF',\r\n");
      out.write("                    '#F7212B',\r\n");
      out.write("                    '#53C41A'\r\n");
      out.write("                ]\r\n");
      out.write("            }, config)\r\n");
      out.write("        \r\n");
      out.write("            // 初始化\r\n");
      out.write("            const svg = d3.select('#svg')\r\n");
      out.write("            const width = 840\r\n");
      out.write("            const height = 760\r\n");
      out.write("            \r\n");
      out.write("            const {\r\n");
      out.write("                levelColors,\r\n");
      out.write("                level,\r\n");
      out.write("                pieColors,\r\n");
      out.write("                doughnutColors,\r\n");
      out.write("                clickPoint,\r\n");
      out.write("                formatTip\r\n");
      out.write("            } = config\r\n");
      out.write("            \r\n");
      out.write("            // 饼图\r\n");
      out.write("            const per = Math.PI * 2 / R.flatten(dataset).length * -1\r\n");
      out.write("            const pieDataset = (function(dataset){\r\n");
      out.write("                let startAngle = per / -2\r\n");
      out.write("                return R.map(function(item){\r\n");
      out.write("                    const endAngle = startAngle + item.length * per\r\n");
      out.write("                    const result = [startAngle, endAngle]\r\n");
      out.write("                    startAngle = endAngle\r\n");
      out.write("                    return result\r\n");
      out.write("                }, dataset)\r\n");
      out.write("            })(dataset)\r\n");
      out.write("            \r\n");
      out.write("            const pieArc = d3.arc()\r\n");
      out.write("                .innerRadius(0)\r\n");
      out.write("                .outerRadius(280)\r\n");
      out.write("                \r\n");
      out.write("            const pieArcs = svg.selectAll('g.pie-arc')\r\n");
      out.write("                .data(pieDataset)\r\n");
      out.write("                .enter()\r\n");
      out.write("                .append('g')\r\n");
      out.write("                .attr('class', 'pie-arc')\r\n");
      out.write("                .attr('transform', 'translate(' + width/2 + ',' + height/2 + ')')    \r\n");
      out.write("                \r\n");
      out.write("            const piePaths = pieArcs.append('path')\r\n");
      out.write("                .attr('d', function(d) {\r\n");
      out.write("                    return pieArc({\r\n");
      out.write("                        startAngle: d[0],\r\n");
      out.write("                        endAngle: d[1]\r\n");
      out.write("                    })\r\n");
      out.write("                })\r\n");
      out.write("                .attr('fill', function(d, i) {\r\n");
      out.write("                    return pieColors[i]\r\n");
      out.write("                })\r\n");
      out.write("                .attr('stroke', 0)\r\n");
      out.write("                \r\n");
      out.write("            // 环形图    \r\n");
      out.write("            const doughnutArc = d3.arc()\r\n");
      out.write("                .innerRadius(250)\r\n");
      out.write("                .outerRadius(280)\r\n");
      out.write("            \r\n");
      out.write("            const doughnutArcs = svg.selectAll('g.doughnut-arc')\r\n");
      out.write("                .data(pieDataset)\r\n");
      out.write("                .enter()\r\n");
      out.write("                .append('g')\r\n");
      out.write("                .attr('class', 'doughnut-arc')\r\n");
      out.write("                .attr('transform', 'translate(' + width/2 + ',' + height/2 + ')')\r\n");
      out.write("                \r\n");
      out.write("            const doughnutPaths = doughnutArcs.append('path')\r\n");
      out.write("                .attr('d', function(d) {\r\n");
      out.write("                    return doughnutArc({\r\n");
      out.write("                        startAngle: d[0],\r\n");
      out.write("                        endAngle: d[1]\r\n");
      out.write("                    })\r\n");
      out.write("                })\r\n");
      out.write("                .attr('fill', function(d, i) {\r\n");
      out.write("                    return doughnutColors[i]\r\n");
      out.write("                })\r\n");
      out.write("                .attr('stroke', 0)\r\n");
      out.write("\r\n");
      out.write("            // 轴线\r\n");
      out.write("            const lineDataset = R.flatten(dataset)\r\n");
      out.write("            \r\n");
      out.write("            const scala = d3.scaleLinear()\r\n");
      out.write("            scala.domain([0, 1])\r\n");
      out.write("            scala.range([0, 320])\r\n");
      out.write("            \r\n");
      out.write("            const axis = svg.selectAll('g.axis')\r\n");
      out.write("                .data(lineDataset)\r\n");
      out.write("                .enter()\r\n");
      out.write("                .append('g')\r\n");
      out.write("                .attr('class', 'axis')\r\n");
      out.write("                .attr('transform', 'translate(' + width/2 + ',' + height/2 + ')')\r\n");
      out.write("                \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            const lines = axis.append('path')\r\n");
      out.write("                .attr('d', function(d, i){\r\n");
      out.write("                    return 'M0,0,L' + scala(Math.cos(per * i - Math.PI/2)) + ',' + scala(Math.sin(per * i - Math.PI/2)) + 'Z'\r\n");
      out.write("                    \r\n");
      out.write("                })\r\n");
      out.write("                .attr('stroke', '#ccc')\r\n");
      out.write("                .attr('stroke-opacity', '0.7')\r\n");
      out.write("                \r\n");
      out.write("            // label\r\n");
      out.write("            const labelScala = d3.scaleLinear()\r\n");
      out.write("            labelScala.domain([0, 1])\r\n");
      out.write("            labelScala.range([0, 350])\r\n");
      out.write("            \r\n");
      out.write("            const labels = axis.append('text')\r\n");
      out.write("                .attr('x', function(d, i){\r\n");
      out.write("                    return labelScala(Math.cos(per * i - Math.PI/2))\r\n");
      out.write("                })\r\n");
      out.write("                .attr('y', function(d, i){\r\n");
      out.write("                    return labelScala(Math.sin(per * i - Math.PI/2))\r\n");
      out.write("                })\r\n");
      out.write("                .attr('text-anchor', 'middle')\r\n");
      out.write("                .text(function(d){\r\n");
      out.write("                    return d.title\r\n");
      out.write("                })\r\n");
      out.write("                \r\n");
      out.write("            // 线\r\n");
      out.write("            const pointScala = d3.scaleLinear()\r\n");
      out.write("            pointScala.domain([0, 1])\r\n");
      out.write("            pointScala.range([0, 240])\r\n");
      out.write("            \r\n");
      out.write("            const lastYearDataset = R.map(function (item) {\r\n");
      out.write("                return R.mergeRight(item, {\r\n");
      out.write("                    value: item.value[0]\r\n");
      out.write("                })\r\n");
      out.write("            }, R.flatten(dataset))\r\n");
      out.write("            \r\n");
      out.write("            const currentYearDataset = R.map(function (item) {\r\n");
      out.write("                return R.mergeRight(item, {\r\n");
      out.write("                    value: item.value[1]\r\n");
      out.write("                })\r\n");
      out.write("            }, R.flatten(dataset))\r\n");
      out.write("            \r\n");
      out.write("            renderPathAndPoints(lastYearDataset, 0)\r\n");
      out.write("            renderPathAndPoints(currentYearDataset, 1)\r\n");
      out.write("            \r\n");
      out.write("            function renderPathAndPoints (dataset, index) {\r\n");
      out.write("                const lineColors = [\r\n");
      out.write("                    '#999',\r\n");
      out.write("                    '#333'\r\n");
      out.write("                ]\r\n");
      out.write("            \r\n");
      out.write("                const pointDataset = R.addIndex(R.map)(function(item, i){\r\n");
      out.write("                    return R.mergeRight(item, {\r\n");
      out.write("                        x : pointScala(Math.cos(per * i - Math.PI/2) * item.value),\r\n");
      out.write("                        y : pointScala(Math.sin(per * i - Math.PI/2) * item.value)\r\n");
      out.write("                    })\r\n");
      out.write("                }, R.flatten(dataset))\r\n");
      out.write("                \r\n");
      out.write("\r\n");
      out.write("                const linePath = R.aperture(2, [...pointDataset, pointDataset[0]])\r\n");
      out.write("                \r\n");
      out.write("                const paths = svg.selectAll('g.path' + '-' + index)\r\n");
      out.write("                    .data(linePath)\r\n");
      out.write("                    .enter()\r\n");
      out.write("                    .append('g')\r\n");
      out.write("                    .attr('class', 'path' + '-' + index)\r\n");
      out.write("                    .attr('transform', 'translate(' + width/2 + ',' + height/2 + ')')\r\n");
      out.write("                    \r\n");
      out.write("                const pathLine = paths.append('path')\r\n");
      out.write("                    .attr('d', function(d) {\r\n");
      out.write("                        const line = d3.path()\r\n");
      out.write("                        line.moveTo(d[0].x, d[0].y)\r\n");
      out.write("                        line.lineTo(d[1].x, d[1].y)\r\n");
      out.write("                        line.closePath()\r\n");
      out.write("                        return line.toString()\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('stroke', lineColors[index])\r\n");
      out.write("                    .attr('stroke-width', '1')\r\n");
      out.write("                    .attr('fill-opacity', '0')\r\n");
      out.write("                    \r\n");
      out.write("                // 点\r\n");
      out.write("                const levelColor = function (value) {\r\n");
      out.write("                    return levelColors[level(value)]\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                const points = svg.selectAll('g.point' + '-' + index)\r\n");
      out.write("                    .data(pointDataset)\r\n");
      out.write("                    .enter()\r\n");
      out.write("                    .append('g')\r\n");
      out.write("                    .attr('class', 'point' + '-' + index)\r\n");
      out.write("                    .attr('transform', 'translate(' + width/2 + ',' + height/2 + ')')\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                const circles = points.append('circle')\r\n");
      out.write("                    .attr('cx', function(d, i) {\r\n");
      out.write("                        return d.x\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('cy', function(d, i) {\r\n");
      out.write("                        return d.y\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('r', '8')\r\n");
      out.write("                    .attr('fill', '#fff')\r\n");
      out.write("                    .attr('stroke', function(d){\r\n");
      out.write("                        return levelColor(d.value)\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('stroke-width', '1')\r\n");
      out.write("                    .on('click', function(d) {\r\n");
      out.write("                        clickPoint(d)\r\n");
      out.write("                    })\r\n");
      out.write("                    .on('mouseover', function() {\r\n");
      out.write("                        d3.select(this)\r\n");
      out.write("                        .attr('fill', '#ccc')\r\n");
      out.write("                    })\r\n");
      out.write("                    .on('mouseout', function() {\r\n");
      out.write("                        d3.select(this)\r\n");
      out.write("                        .attr('fill', '#fff')\r\n");
      out.write("                    })\r\n");
      out.write("                    .append('title')\r\n");
      out.write("                    .text(function(d) {\r\n");
      out.write("                        return formatTip(d, index)\r\n");
      out.write("                    })\r\n");
      out.write("                const innerCircles = points.append('circle')\r\n");
      out.write("                    .attr('cx', function(d, i) {\r\n");
      out.write("                        return d.x\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('cy', function(d, i) {\r\n");
      out.write("                        return d.y\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('r', '4')\r\n");
      out.write("                    .attr('fill', function(d){\r\n");
      out.write("                        return levelColor(d.value)\r\n");
      out.write("                    })\r\n");
      out.write("                    .attr('stroke-width', '0')\r\n");
      out.write("                    .on('click', function(d) {\r\n");
      out.write("                        clickPoint(d)\r\n");
      out.write("                    })\r\n");
      out.write("                    .append('title')\r\n");
      out.write("                    .text(function(d) {\r\n");
      out.write("                        return formatTip(d, index)\r\n");
      out.write("                    })\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function selectColumn(){\r\n");
      out.write("        \t$(\"#select_column\").css('display','block');\r\n");
      out.write("        }\r\n");
      out.write("        function cancelSelectColumn(){\r\n");
      out.write("\t\t\t$(\"#select_column\").css('display','none');\r\n");
      out.write("\t\t}\r\n");
      out.write("        function confirmSelectColumn(){\r\n");
      out.write("        \t$(\"#select_column\").css('display','none');\r\n");
      out.write("        \tvar column_ids=obj.get_data();//选中id数组\r\n");
      out.write("        \tvar ids=\"\";\r\n");
      out.write("        \tfor(var i=0;i<column_ids.length;i++){\r\n");
      out.write("        \t\tids+=column_ids[i]+\",\";\r\n");
      out.write("        \t}\r\n");
      out.write("        \t$.ajax({\r\n");
      out.write("        \t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/opecolumn/opeColumn/getColumnListByIds\",\r\n");
      out.write("        \t\ttype:\"post\",\r\n");
      out.write("        \t\tdata:{ids:ids},\r\n");
      out.write("        \t\tdataType:\"json\",\r\n");
      out.write("        \t\tsuccess:function(res){\t\r\n");
      out.write("        \t\t\tvar columnList=res;\r\n");
      out.write("        \t\t\t$(\"#selectRow1\").html('');\r\n");
      out.write("        \t\t\tvar htmlRow1='<form id=\"searchForm\" modelAttribute=\"opeColumn\">';\r\n");
      out.write("        \t\t\tfor(var i=0;i<columnList.length;i++){\r\n");
      out.write("        \t\t\t\tvar column = columnList[i];\r\n");
      out.write("        \t\t\t\tif(column.columnType=='文本'){\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-xs-1-5\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"form-group\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12 update-align-items \">'+column.columnName+'</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<input  class=\"form-control \" type=\"text\" value=\"\" name=\"'+column.columnCode+'\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t}\r\n");
      out.write("        \t\t\t\tif(column.columnType=='下拉'){\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-xs-1-5\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"form-group\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12 update-align-items \">'+column.columnName+'</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12\">'\r\n");
      out.write("        \t\t\t\t\tvar options = column.options;\r\n");
      out.write("        \t\t\t\t\toptions=options.split('*#');\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<select id=\"selectType\" name=\"'+column.columnCode+'\" class=\"form-control \">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<option value=\"\">全部</option>'\r\n");
      out.write("        \t\t\t\t\tfor(var j=0;j<options.length;j++){\r\n");
      out.write("        \t\t\t\t\t\thtmlRow1+='<option value=\"'+options[j]+'\">'+options[j]+'</option>'\r\n");
      out.write("        \t\t\t\t\t}\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</select>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t}\r\n");
      out.write("        \t\t\t\tif(column.columnType=='时间'){\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-xs-1-5\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"input-group \" >'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12 update-align-items \">'+column.columnName+'-起</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12 \">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<input  class=\"form-control form_datetime\" type=\"text\" value=\"\" name=\"'+column.columnCode+'Start\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-xs-1-5\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"input-group\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12 update-align-items \">'+column.columnName+'-止</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<div class=\"col-md-12 \">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='<input  class=\"form-control form_datetime\" type=\"text\" value=\"\" name=\"'+column.columnCode+'End\">'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t\thtmlRow1+='</div>'\r\n");
      out.write("        \t\t\t\t}\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t\thtmlRow1+='</form>'\r\n");
      out.write("        \t\t\t$(\"#selectRow1\").html(htmlRow1);\r\n");
      out.write("        \t\t\tlay('.form_datetime').each(function(){\r\n");
      out.write("        \t\t\t    laydate.render({\r\n");
      out.write("        \t\t\t      elem: this\r\n");
      out.write("        \t\t\t      ,trigger: 'click'\r\n");
      out.write("        \t\t\t    });\r\n");
      out.write("        \t\t\t  });\r\n");
      out.write("        \t\t\t\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t});\t\r\n");
      out.write("        \t\r\n");
      out.write("        }\r\n");
      out.write("        var objIndex;\r\n");
      out.write("        $(function(){\r\n");
      out.write("            var data = [];\r\n");
      out.write("            //获取字段合集\r\n");
      out.write("             $.ajax({\r\n");
      out.write("        \t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/opecolumn/opeColumn/getAllColumnList\",\r\n");
      out.write("        \t\ttype:\"post\",\r\n");
      out.write("        \t\tdataType:\"json\",\r\n");
      out.write("        \t\tdata:{},\r\n");
      out.write("        \t\tsuccess:function(res){\t\r\n");
      out.write("        \t\t\tvar parentlist = res.parentlist;\r\n");
      out.write("        \t\t\tfor(var i=0;i<parentlist.length;i++){\r\n");
      out.write("        \t\t\tdata.push(parentlist[i]);\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t\tvar childlist = res.childlist;\r\n");
      out.write("        \t\t\tfor(var i=0;i<childlist.length;i++){\r\n");
      out.write("        \t\t\t\tdata.push(childlist[i]);\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t\tobj = cascadeBox('cascadebox','checkboxname',data,[],[],true,true,null);\r\n");
      out.write("        \t\t},\r\n");
      out.write("        \t\tfail:function(err){\r\n");
      out.write("        \t\t\tconsole.log(err);\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t});\t\r\n");
      out.write("             var dataIndex = [];\r\n");
      out.write("            //获取指标合集\r\n");
      out.write("             $.ajax({\r\n");
      out.write("         \t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/standindex/opeStIndex/getIndexList\",\r\n");
      out.write("         \t\ttype:\"post\",\r\n");
      out.write("         \t\tdataType:\"json\",\r\n");
      out.write("         \t\tdata:{},\r\n");
      out.write("         \t\tsuccess:function(res){\t\r\n");
      out.write("         \t\t\tvar parentlist = res.parentlist;\r\n");
      out.write("         \t\t\tfor(var i=0;i<parentlist.length;i++){\r\n");
      out.write("         \t\t\t\tdataIndex.push(parentlist[i]);\r\n");
      out.write("         \t\t\t}\r\n");
      out.write("         \t\t\tvar childlist = res.childlist;\r\n");
      out.write("         \t\t\tfor(var i=0;i<childlist.length;i++){\r\n");
      out.write("         \t\t\t\tdataIndex.push(childlist[i]);\r\n");
      out.write("         \t\t\t}\r\n");
      out.write("         \t\t\tobjIndex = cascadeBox('cascadeboxIndex','checkboxname',dataIndex,[],[],true,true,null);\r\n");
      out.write("         \t\t},\r\n");
      out.write("         \t\tfail:function(err){\r\n");
      out.write("         \t\t\tconsole.log(err);\r\n");
      out.write("         \t\t}\r\n");
      out.write("         \t});\t\r\n");
      out.write("        });\r\n");
      out.write("        function selectIndex (){\r\n");
      out.write("        \t$(\"#select_index\").css('display','block');\r\n");
      out.write("        }\r\n");
      out.write("        function cancelSelectIndex (){\r\n");
      out.write("        \t$(\"#select_index\").css('display','none');\r\n");
      out.write("        }\r\n");
      out.write("        function confirmSelectIndex(){\r\n");
      out.write("        \t$(\"#select_index\").css('display','none');\r\n");
      out.write("        \tvar index_ids=objIndex.get_data();//选中id数组\r\n");
      out.write("        \t$(\"#indexIds\").val(index_ids);\r\n");
      out.write("        \tsearch();\r\n");
      out.write("        }\r\n");
      out.write("            function search(){\r\n");
      out.write("            \t$(\"#svg\").html('');\r\n");
      out.write("            \tshowRadar();\r\n");
      out.write("            }          \r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /webpage/include/taglib.jsp(11,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("ctx");
    // /webpage/include/taglib.jsp(11,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}${fns:getAdminPath()}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0, false));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent(null);
    // /webpage/include/taglib.jsp(12,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("ctxStatic");
    // /webpage/include/taglib.jsp(12,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}/static", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }
}
