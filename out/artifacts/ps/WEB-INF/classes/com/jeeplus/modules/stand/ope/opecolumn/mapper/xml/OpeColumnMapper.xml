<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.stand.ope.opecolumn.mapper.OpeColumnMapper">
    
	<sql id="opeColumnColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.stage AS "stage",
		a.column_name AS "columnName",
		a.column_code AS "columnCode",
		a.column_type AS "columnType",
		a.options AS "options",
		a.select_type AS "selectType",
		a.remarks AS "remarks"
	</sql>
	
	<sql id="opeColumnJoins">
		
	</sql>
	
    
	<select id="get" resultType="OpeColumn" >
		SELECT 
			<include refid="opeColumnColumns"/>
		FROM ope_column a
		<include refid="opeColumnJoins"/>
		WHERE a.id = to_number(#{id})
	</select>
	
	<select id="findList" resultType="OpeColumn" >
		SELECT 
			<include refid="opeColumnColumns"/>
		FROM ope_column a
		<include refid="opeColumnJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="columnName != null and columnName != ''">
				AND a.column_name = #{columnName}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OpeColumn" >
		SELECT 
			<include refid="opeColumnColumns"/>
		FROM ope_column a
		<include refid="opeColumnJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ope_column(
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			stage,
			column_name,
			column_code,
			column_type,
			options,
			select_type,
			remarks
		) VALUES (
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{stage},
			#{columnName},
			#{columnCode},
			#{columnType},
			#{options},
			#{selectType},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE ope_column SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			stage = #{stage},
			column_name = #{columnName},
			column_code = #{columnCode},
			column_type = #{columnType},
			options = #{options},
			select_type = #{selectType},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM ope_column
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE ope_column SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="OpeColumn" statementType="STATEMENT">
		select * FROM ope_column  where ${propertyName} = '${value}'
	</select>
	
	<select id="getParentlist" resultType="map" >
    	select stage "id", stage "name",0 as "level", 'true' "no_checkbox" from OPE_COLUMN t group by stage
	</select>
	<select id="getChildlist" resultType="map" >
		select id "id", t.column_name "name",1 as "level", stage "parent_id",t.column_code as "code" from OPE_COLUMN t 
	</select>
	
	
</mapper>