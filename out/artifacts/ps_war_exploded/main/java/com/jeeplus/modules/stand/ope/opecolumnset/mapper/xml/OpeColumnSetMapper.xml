<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.stand.ope.opecolumnset.mapper.OpeColumnSetMapper">
    
	<sql id="opeColumnSetColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.stage_id AS "stageId",
		a.table_name AS "tableName",
		a.column_name AS "columnName",
		a.column_type AS "columnType",
		a.column_selections AS "columnSelections",
		a.is_default_selected AS "isDefaultSelected",
		a.is_active AS "isActive",
		a.stage_name AS "stageName",
		a.remarks AS "remarks"
	</sql>
	
	<sql id="opeColumnSetJoins">
		
		LEFT JOIN ope_stand_stage isDefaultSelected ON isDefaultSelected.id = a.is_default_selected
	</sql>
	
    
	<select id="get" resultType="OpeColumnSet" >
		SELECT 
			<include refid="opeColumnSetColumns"/>
		FROM ope_column_set a
		<include refid="opeColumnSetJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="OpeColumnSet" >
		SELECT 
			<include refid="opeColumnSetColumns"/>
		FROM ope_column_set a
		<include refid="opeColumnSetJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OpeColumnSet" >
		SELECT 
			<include refid="opeColumnSetColumns"/>
		FROM ope_column_set a
		<include refid="opeColumnSetJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO ope_column_set(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			stage_id,
			table_name,
			column_name,
			column_type,
			column_selections,
			is_default_selected,
			is_active,
			stage_name,
			remarks
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{stageId},
			#{tableName},
			#{columnName},
			#{columnType},
			#{columnSelections},
			#{isDefaultSelected},
			#{isActive},
			#{stageName},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE ope_column_set SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			stage_id = #{stageId},
			table_name = #{tableName},
			column_name = #{columnName},
			column_type = #{columnType},
			column_selections = #{columnSelections},
			is_default_selected = #{isDefaultSelected},
			is_active = #{isActive},
			stage_name = #{stageName},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM ope_column_set
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE ope_column_set SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="OpeColumnSet" statementType="STATEMENT">
		select * FROM ope_column_set  where ${propertyName} = '${value}'
	</select>
	
</mapper>